@model PortalCOSIE.Domain.Entities.Rol
@{
    ViewBag.Title = "Crear rol";
}

<div class="card shadow-sm">
    <div class="card-header">
        <div class="d-flex align-items-center justify-content-between flex-wrap">
            <!-- Título a la izquierda -->
            <h6 class="mb-0 fw-bold">Nuevo rol</h6>

            <a href="@Url.Action("Index", "Rol")" class="btn btn-warning btn-sm shadow-sm">
                <i class="fas fa-cancel me-2"></i>Cancelar
            </a>
        </div>
    </div>

    <div class="card-body overflow-auto" style="height: calc(100vh - 150px);">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="container">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="row mb-3">
                    <div class="col-lg-4 col-md-4">
                        @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-8">
                        @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-lg-3">
                        @Html.LabelFor(model => model.Creado, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.Creado, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Creado, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-3">
                        @Html.LabelFor(model => model.CreadoPor, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.CreadoPor, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CreadoPor, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-3">
                        @Html.LabelFor(model => model.Actualizado, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.Actualizado, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Actualizado, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-3">
                        @Html.LabelFor(model => model.ActualizadoPor, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.ActualizadoPor, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ActualizadoPor, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-12 text-end">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save me-2"></i> Guardar
                        </button>
                    </div>
                </div>
            </div>
        }

    </div>
</div>
